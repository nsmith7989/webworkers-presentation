{
  "name": "grunt-fontface",
  "description": "Generate SCSS from all font files within a font directory",
  "version": "0.8.1",
  "homepage": "https://github.com/nsmith7989/grunt-fontface",
  "author": {
    "name": "Nathanael Smith",
    "email": "nathanael@gorocketfuel.com",
    "url": "scriptfall.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nsmith7989/grunt-fontface.git"
  },
  "bugs": {
    "url": "https://github.com/nsmith7989/grunt-fontface/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/nsmith7989/grunt-fontface/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.4",
    "underscore": "^1.6.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.4"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "underscore": "^1.6.0"
  },
  "readme": "# grunt-fontface\n\n> Generate CSS/SCSS from all font files within a font directory\n\n## Getting Started\nThis plugin requires Grunt `~0.4.4`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-fontface --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-fontface');\n```\n\n## The \"fontface\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `fontface` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  fontface: {\n    options: {\n     \tfontDir: 'fonts'\n     \ttemplate: \"@font-face {\" +\n                  \t\t\"font-family: 'MyFontFamily';\" +\n                  \t\t\"src: url('{{font}}.eot?#iefix') format('embedded-opentype'),\" +\n                  \t\t\"url('{{font}}.woff') format('woff'),\" +\n                  \t\t\"url('{{font}}.ttf')  format('truetype'),\" +\n                  \t\t\"url('{{font}}.svg#{{font}}') format('svg');\" +\n                  \t\"}\"\n    }\n  },\n});\n```\n\n### Options\n\n#### options.template\nType: `String`\nDefault value: none\nRequired: true\n\nString that will be output for each font. Uses handlebars style template interpolation `{{ font }}`.\n Example:\n\n\t\"@font-face {\" +\n\t\t\"font-family: 'MyFontFamily';\" +\n\t\t\"src: url('{{font}}.eot?#iefix') format('embedded-opentype'),\" +\n\t\t\"url('{{font}}.woff') format('woff'),\" +\n\t\t\"url('{{font}}.ttf')  format('truetype'),\" +\n\t\t\"url('{{font}}.svg#{{font}}') format('svg');\" +\n\t\"}\"\n\n#### options.fontDir\nType: `String`\nDefault value: 'fonts'\n\nLocation of the fonts directory\n\n### options.outputFile\n\nType: `String`\nDefault value: 'sass/_fonts.scss'\n\nLocation of the output css/scss\n\n## Release History\nv 0.8.0 It's working!\n",
  "readmeFilename": "README.md",
  "_id": "grunt-fontface@0.8.1",
  "_from": "grunt-fontface@"
}
